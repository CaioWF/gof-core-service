service: gof-core-service

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  environment:
    bucketName: ${self:custom.bucketName}
    usersTableName: ${self:custom.usersTableName}
    coursesTableName: ${self:custom.coursesTableName}
    classesTableName: ${self:custom.classesTableName}
    connectionsTableName: ${self:custom.connectionsTableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
      Resource: '*'

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dynamodb-local

package:
  individually: true

custom:
  bucketName: gof-core-service-bucket
  usersTableName: users-table
  coursesTableName: courses-table
  classesTableName: classes-table
  connectionsTableName: connections-table
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    migration:
      dir: offline/migrations

functions:
  auth:
    handler: src/handlers/auth.handler
    events:
      - http:
          path: auth
          method: POST
          cors: true
  users:
    handler: src/handlers/users.handler
    events:
      - http:
          path: users
          method: GET
          cors: true
      - http:
          path: users
          method: POST
          cors: true
      - http:
          path: users/{username}
          method: GET
          cors: true
      - http:
          path: users/{username}
          method: PUT
          cors: true
      - http:
          path: users/{username}
          method: DELETE
          cors: true
  courses:
    handler: src/handlers/courses.handler
    events:
      - http:
          path: courses
          method: GET
          cors: true
      - http:
          path: courses
          method: POST
          cors: true
      - http:
          path: courses/{id}
          method: GET
          cors: true
      - http:
          path: courses/{id}
          method: PUT
          cors: true
      - http:
          path: courses/{id}
          method: DELETE
          cors: true
  connections:
    handler: src/handlers/connections.handler
    events:
      - http:
          path: connections
          method: GET
          cors: true
      - http:
          path: connections
          method: POST
          cors: true
      

resources:
  Resources:
    GofCoreServiceBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucketName}
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.usersTableName}
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    CoursesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.coursesTableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    ClassesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.classesTableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    ConnectionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.connectionsTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
